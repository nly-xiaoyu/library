<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.hunau.hyx.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="edu.hunau.hyx.bean.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bname" jdbcType="VARCHAR" property="bname" />
    <result column="bno" jdbcType="INTEGER" property="bno" />
    <result column="authoe" jdbcType="VARCHAR" property="authoe" />
    <result column="bclass" jdbcType="VARCHAR" property="bclass" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="locnum" jdbcType="INTEGER" property="locnum" />
    <result column="locarea" jdbcType="VARCHAR" property="locarea" />
    <result column="ramark" jdbcType="VARCHAR" property="ramark" />
    <result column="bstatus" jdbcType="INTEGER" property="bstatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bname, bno, authoe, bclass, price, locnum, locarea, ramark, bstatus
  </sql>
  <select id="selectByExample" parameterType="edu.hunau.hyx.bean.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.hunau.hyx.bean.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.hunau.hyx.bean.Book">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book (id, bname, bno, 
      authoe, bclass, price, 
      locnum, locarea, ramark, 
      bstatus)
    values (#{id,jdbcType=INTEGER}, #{bname,jdbcType=VARCHAR}, #{bno,jdbcType=INTEGER}, 
      #{authoe,jdbcType=VARCHAR}, #{bclass,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{locnum,jdbcType=INTEGER}, #{locarea,jdbcType=VARCHAR}, #{ramark,jdbcType=VARCHAR}, 
      #{bstatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.hunau.hyx.bean.Book">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="bname != null">
        bname,
      </if>
      <if test="bno != null">
        bno,
      </if>
      <if test="authoe != null">
        authoe,
      </if>
      <if test="bclass != null">
        bclass,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="locnum != null">
        locnum,
      </if>
      <if test="locarea != null">
        locarea,
      </if>
      <if test="ramark != null">
        ramark,
      </if>
      <if test="bstatus != null">
        bstatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="bname != null">
        #{bname,jdbcType=VARCHAR},
      </if>
      <if test="bno != null">
        #{bno,jdbcType=INTEGER},
      </if>
      <if test="authoe != null">
        #{authoe,jdbcType=VARCHAR},
      </if>
      <if test="bclass != null">
        #{bclass,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="locnum != null">
        #{locnum,jdbcType=INTEGER},
      </if>
      <if test="locarea != null">
        #{locarea,jdbcType=VARCHAR},
      </if>
      <if test="ramark != null">
        #{ramark,jdbcType=VARCHAR},
      </if>
      <if test="bstatus != null">
        #{bstatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.hunau.hyx.bean.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bname != null">
        bname = #{record.bname,jdbcType=VARCHAR},
      </if>
      <if test="record.bno != null">
        bno = #{record.bno,jdbcType=INTEGER},
      </if>
      <if test="record.authoe != null">
        authoe = #{record.authoe,jdbcType=VARCHAR},
      </if>
      <if test="record.bclass != null">
        bclass = #{record.bclass,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.locnum != null">
        locnum = #{record.locnum,jdbcType=INTEGER},
      </if>
      <if test="record.locarea != null">
        locarea = #{record.locarea,jdbcType=VARCHAR},
      </if>
      <if test="record.ramark != null">
        ramark = #{record.ramark,jdbcType=VARCHAR},
      </if>
      <if test="record.bstatus != null">
        bstatus = #{record.bstatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=INTEGER},
      bname = #{record.bname,jdbcType=VARCHAR},
      bno = #{record.bno,jdbcType=INTEGER},
      authoe = #{record.authoe,jdbcType=VARCHAR},
      bclass = #{record.bclass,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      locnum = #{record.locnum,jdbcType=INTEGER},
      locarea = #{record.locarea,jdbcType=VARCHAR},
      ramark = #{record.ramark,jdbcType=VARCHAR},
      bstatus = #{record.bstatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hunau.hyx.bean.Book">
    update book
    <set>
      <if test="bname != null">
        bname = #{bname,jdbcType=VARCHAR},
      </if>
      <if test="bno != null">
        bno = #{bno,jdbcType=INTEGER},
      </if>
      <if test="authoe != null">
        authoe = #{authoe,jdbcType=VARCHAR},
      </if>
      <if test="bclass != null">
        bclass = #{bclass,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="locnum != null">
        locnum = #{locnum,jdbcType=INTEGER},
      </if>
      <if test="locarea != null">
        locarea = #{locarea,jdbcType=VARCHAR},
      </if>
      <if test="ramark != null">
        ramark = #{ramark,jdbcType=VARCHAR},
      </if>
      <if test="bstatus != null">
        bstatus = #{bstatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hunau.hyx.bean.Book">
    update book
    set bname = #{bname,jdbcType=VARCHAR},
      bno = #{bno,jdbcType=INTEGER},
      authoe = #{authoe,jdbcType=VARCHAR},
      bclass = #{bclass,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      locnum = #{locnum,jdbcType=INTEGER},
      locarea = #{locarea,jdbcType=VARCHAR},
      ramark = #{ramark,jdbcType=VARCHAR},
      bstatus = #{bstatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>